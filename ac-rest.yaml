device:
  poll: True
  connection:
    type: request
    params:
      verify: False
      headers: { "Content-Type": "application/json" }
  status:
    type: 'json_status'
    connection:
      params: { method : 'GET', url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/status' }
  operations:
    hvac: # hvac_mode
      type: modes
      connection:
        params: { method: 'POST', url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/ac_mode' }
      values:
        'auto': { value: 'Auto', connection: { params: { json: {"value":"auto"} }, connection: { params: { json: {"value":"on"}, url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/power' }, condition_template: "{% if device_state.components.main.switch.switch.value == 'off' -%}1{%- else -%}0{%- endif %}" } } }
        'cool': { value: 'Cool', connection: { params: { json: {"value":"cool"} }, connection: { params: { json: {"value":"on"}, url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/power' }, condition_template: "{% if device_state.components.main.switch.switch.value == 'off' -%}1{%- else -%}0{%- endif %}" } } }
        'heat': { value: 'Heat', connection: { params: { json: {"value":"heat"} }, connection: { params: { json: {"value":"on"}, url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/power' }, condition_template: "{% if device_state.components.main.switch.switch.value == 'off' -%}1{%- else -%}0{%- endif %}" } } }
        'dry': { value: 'Dry', connection: { params: { json: {"value":"dry"} }, connection: { params: { json: {"value":"on"}, url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/power' }, condition_template: "{% if device_state.components.main.switch.switch.value == 'off' -%}1{%- else -%}0{%- endif %}" } } }
        'off': { value : 'Off', connection: { params: { json:  {"value":"off"}, url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/power' }, condition_template: "{% if device_state.components.main.switch.switch.value == 'on' -%}1{%- else -%}0{%- endif %}" } }
      status_template: "{% if device_state.components.main.switch.switch.value == 'off' -%}Off{%- else -%}{{ device_state.components.main.airConditionerMode.airConditionerMode.value}}{%- endif %}"

    preset: # preset_mode
      type: modes
      connection:
        params: { method: 'POST', url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/preset' }
      values:
        'Brak': { value : 'off', connection: { params: { json: {"value":"off"} } } }
        'Sen': { value : 'sleep', connection: { params: { json: {"value":"sleep"} } } }
        'Szybko': { value : 'speed', connection: { params: { json: {"value":"speed"} } } }
        'WindFree': { value : 'windFree', connection: { params: { json: {"value":"windFree"} } } }
        'WindFree-sen': { value : 'windFreeSleep', connection: { params: { json: {"value":"windFreeSleep"} } } }
      status_template: '{% if(device_state.components.main.airConditionerOptionalMode) != null-%}{{device_state.components.main.airConditionerOptionalMode.acOptionalMode.value}} {%- else -%} Brak {%- endif %}'
    power:
      type: switch
      connection:
        params: { method: 'POST', url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/power' }
      values:
        'off': { value: 'Off', connection: { params: { json: {"value":"off"} } } }
        'on': { value: 'On', connection: { params: { json: {"value":"on"} } } }
      status_template: '{{ device_state.components.main.switch.switch.value }}'
    fan: # fan_mode
      type: modes
      connection:
        params: { method: 'POST', url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/fan_mode' }
      values:
        'Auto': { value : 'auto', connection: { params: { json: {"value":"auto"} } } }
        'Wolno': { value : 'low', connection: { params: { json: {"value":"low"} } } }
        'Średnio': { value : 'medium', connection: { params: { json: {"value":"medium"} } } }
        'Szybko': { value : 'high', connection: { params: { json: {"value":"high"} } } }
        'Turbo': { value : 'turbo', connection: { params: { json: {"value":"turbo"} } } }
      status_template: '{{ device_state.components.main.airConditionerFanMode.fanMode.value }}'
    swing: # fan_oscillation_mode
      type: modes
      connection:
        params: { method: 'POST', url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/fan_oscillation_mode' }
      values:
        'Wszystkie kierunki': { value: 'all', connection: { params: { json: { "value": "all" } } } }
        'Pionowo': { value: 'vertical', connection: { params: { json: { "value": "vertical" } } } }
        'Poziomo': { value: 'horizontal', connection: { params: { json: { "value": "horizontal" } } } }
        'Stałe': { value: 'fixed', connection: { params: { json: { "value": "fixed" } } } }
        'Stałe - środek': { value: 'fixedCenter', connection: { params: { json: { "value": "fixedCenter" } } } }
        'Stałe - lewo': { value: 'fixedLeft', connection: { params: { json: { "value": "fixedLeft" } } } }
        'Stałe - prawo': { value: 'fixedRight', connection: { params: { json: { "value": "fixedRight" } } } }
        'Pośrednio': { value: 'indirect', connection: { params: { json: { "value": "indirect" } } } }
        'Bezpośrednio': { value: 'direct', connection: { params: { json: { "value": "direct" } } } }
        'Daleko': { value: 'far', connection: { params: { json: { "value": "far" } } } }
      status_template: '{{ device_state.components.main.fanOscillationMode.fanOscillationMode.value }}'
    temperature:
      type: number
      connection:
        params: { method: 'POST', url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/temperature' }
      min: 16
      max: 30
      status_template: '{{ device_state.components.main.thermostatCoolingSetpoint.coolingSetpoint.value | int }}'
      connection_template: '{ "json": {"value": {{ value }} }}'
      unit_template: 'Celsius'
    beep:
      type: switch
      connection:
        params: { method: 'POST', url: 'http://__CLIMATE_IP_HOST__/devices/__DEVICE_ID__/beep' }
      values:
        'off': { value: 'Off', connection: { params: { json: { "value": "off" } } } }
        'on': { value: 'On', connection: { params: { json: { "value": "on" } } } }
      status_template: "{% if device_state.components.main.switch.switch.value | int > 1 -%}On{%- else -%}Off{%-endif%}"
  attributes:
    current_temperature:
      type: number
      status_template: '{{ device_state.components.main.temperatureMeasurement.temperature.value }}'
      unit_template: '{{ device_state.components.main.temperatureMeasurement.temperature.unit }}'
    min_temp:
      type: number
      status_template: '16'
      unit_template: 'Celsius'
    max_temp:
      type: number
      status_template: '30'
      unit_template: 'Celsius'
